'3-Chemistry' = 'Chemistry';
'4-Physics' = 'Physics'")
factor_data_frame$race <- car::recode(factor_data_frame$race,
"'1-Asian or Pacific Islander' = NA;
'2-Hispanic' = 'Hispanic';
'3-Black' = 'Black';
'4-White' = 'White';
'5-American Indian' = NA;
'6-Multi racial' = 'Multi racial'")
prepared_data <- prepare_data(raw_data_matrix, "raw", grouping_vector = NULL, to_standardize = T) # this won't work when no cases are removed
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
devtools::load_all(".")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
statistics[[10]] + ylab("Raw score")
output <- create_profiles(prepared_data, 4, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
statistics[[10]] + ylab("Raw score")
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
statistics[[10]] + ylab("Raw score")
cluster_vector <- c("Moderately Low", "Rational", "Purposeful", "Universally Low", "Busy", "Full", "Recreational")
str(factor_data_frame)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("gender"), cluster_names = cluster_vector)
factor_data_frame <- dplyr::select(data_ss, stud_ID, subject, gender, race:age, -instructional_practice) # pop
factor_data_frame <- distinct(factor_data_frame)
str(new_data)
View(new_data)
raw_data_matrix <- new_data[, 3:9]
str(factor_data_frame)
factor_data_frame$gender <- car::recode(factor_data_frame$gender,
"'1-M' = 'Male';
'2-F' = 'Female'")
factor_data_frame$subject <- car::recode(factor_data_frame$subject,
"'1-Integrated Sci' = 'Integrated Science';
'2-Biology' = 'Biology';
'3-Chemistry' = 'Chemistry';
'4-Physics' = 'Physics'")
factor_data_frame$race <- car::recode(factor_data_frame$race,
"'1-Asian or Pacific Islander' = NA;
'2-Hispanic' = 'Hispanic';
'3-Black' = 'Black';
'4-White' = 'White';
'5-American Indian' = NA;
'6-Multi racial' = 'Multi racial'")
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("gender"), cluster_names = cluster_vector)
explored_factors[[4]] # plot
explored_factors[[6]][[1]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race"), cluster_names = cluster_vector)
explored_factors[[4]] # plot
explored_factors[[6]][[1]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race", "gender"), cluster_names = cluster_vector)
explored_factors[[4]] # plot
explored_factors[[6]][[1]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("gender", "efficacy"), cluster_names = cluster_vector)
factor_data_frame <- dplyr::select(data_ss, stud_ID, subject, gender, race:age, -instructional_practice) # pop
factor_data_frame <- distinct(factor_data_frame)
factor_data_frame <- distinct(factor_data_frame)
str(factor_data_frame)
to_merge <-
data_ss %>%
select(stud_ID, posaffect:expectation) %>%
group_by(stud_ID) %>%
summarize_each(funs(mean))
factor_data_frame <- dplyr::left_join(factor_data_frame, to_merge, by = "stud_ID")
factor_data_frame$age <- as.factor(factor_data_frame$age)
factor_data_frame$posaffect <- as.factor(factor_data_frame$posaffect)
factor_data_frame$negaffect <- as.factor(factor_data_frame$negaffect)
factor_data_frame$relevance <- as.factor(round(factor_data_frame$relevance))
factor_data_frame$efficacy <- as.factor(round(factor_data_frame$efficacy))
factor_data_frame$selfesteem <- as.factor(factor_data_frame$selfesteem)
factor_data_frame$expectation <- as.factor(round(factor_data_frame$expectation))
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("gender", "efficacy"), cluster_names = cluster_vector)
explored_factors[[4]] # plot
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race", "efficacy"), cluster_names = cluster_vector)
explored_factors[[4]] # plot
factor_data_frame$race <- car::recode(factor_data_frame$race,
"'1-Asian or Pacific Islander' = NA;
'2-Hispanic' = 'Hispanic';
'3-Black' = 'Black';
'4-White' = 'White';
'5-American Indian' = NA;
'6-Multi racial' = 'Multi racial'")
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race", "efficacy"), cluster_names = cluster_vector)
explored_factors[[1]]
explored_factors[[2]]
#write.csv(explored_factors[[2]], "for_profiles_of_profiles.csv", row.names = F)
explored_factors[[3]]
explored_factors[[4]] # plot
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race", "gender"), cluster_names = cluster_vector)
explored_factors[[4]] # plot
explored_factors[[6]][[1]]
factor_data_frame$gender <- car::recode(factor_data_frame$gender,
"'1-M' = 'Male';
'2-F' = 'Female'")
cluster_vector <- c("Moderately Low", "Rational", "Purposeful", "Universally Low", "Busy", "Full", "Recreational")
str(factor_data_frame)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race", "gender"), cluster_names = cluster_vector)
explored_factors[[4]] # plot
explored_factors[[6]][[1]]
explored_factors[[6]][[2]]
explored_factors[[6]][[1]]
# command_and_control.R
###############################
### 1. SETTING UP #############
###############################
remove(list = ls())
devtools::install_github("jrosen48/prcr")
library(prcr)
library(ggplot2)
library(dplyr)
set.seed("03112016")
setwd("~/dropbox/research/SciMo")
data <- tbl_df(foreign::read.spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav", to.data.frame = T))
# data <- haven::read_spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav")
# Removing the errant case
data$stud_ID <- stringr::str_trim(as.character(data$stud_ID))
to_remove <- data$stud_ID == "AXR050594" & data$month == 10 & data$day == 20 & data$year == 8 & data$signal == "2-2nd signal" # removing 10/20/8, ID = "AXR050594", second beeper
nrow(data)
data <- data[!to_remove, ]
nrow(data) # - 1 case
###############################
### 2. CREATING SCALES ########
###############################
cognitive <- data.frame(cbind(data$imp_y, data$imp_fut), stringsAsFactors = F)
affective <- data.frame(cbind(data$enjoy, data$interest), stringsAsFactors = F)
behavioral <- data.frame(cbind(data$conc, data$hardwk), stringsAsFactors = F)
data_ss <-
data %>%
mutate(behavioral_scale = ifelse(!is.na(behavioral$X1) & !is.na(behavioral$X2), (behavioral$X1 + behavioral$X2) / 2,
ifelse(is.na(behavioral$X1), behavioral$X2, behavioral$X1)),
cognitive_scale = ifelse(!is.na(cognitive$X1) & !is.na(cognitive$X2), (cognitive$X1 + cognitive$X2) / 2,
ifelse(is.na(cognitive$X1), cognitive$X2, cognitive$X1)),
affective_scale = ifelse(!is.na(affective$X1) & !is.na(affective$X2), (affective$X1 + affective$X2) / 2,
ifelse(is.na(affective$X1), affective$X2, affective$X1)), stringsAsFactors = F) %>%
select(behavioral_scale,
cognitive_scale,
affective_scale,
stud_ID,
teacher_ID,
subject,
gender,
race,
instructional_practice,
age,
posaffect,
negaffect,
relevance,
efficacy,
selfesteem,
expectation)
raw_data_matrix <- data_ss[, 1:3]
grouping_vector <- data_ss[, 4]
factor_data_frame <- dplyr::select(data_ss, stud_ID, subject, gender, race:expectation)
factor_data_frame$age <- as.factor(factor_data_frame$age)
factor_data_frame$posaffect <- as.factor(factor_data_frame$posaffect)
factor_data_frame$negaffect <- as.factor(factor_data_frame$negaffect)
factor_data_frame$relevance <- as.factor(factor_data_frame$relevance)
factor_data_frame$efficacy <- as.factor(factor_data_frame$efficacy)
factor_data_frame$selfesteem <- as.factor(factor_data_frame$selfesteem)
factor_data_frame$expectation <- as.factor(data_ss$expectation)
factor_data_frame$gender <- car::recode(factor_data_frame$gender,
"'1-M' = 'Male';
'2-F' = 'Female'")
factor_data_frame$subject <- car::recode(factor_data_frame$subject,
"'1-Integrated Sci' = 'Integrated Science';
'2-Biology' = 'Biology';
'3-Chemistry' = 'Chemistry';
'4-Physics' = 'Physics'")
factor_data_frame$race <- car::recode(factor_data_frame$race,
"'1-Asian or Pacific Islander' = NA;
'2-Hispanic' = 'Hispanic';
'3-Black' = 'Black';
'4-White' = 'White';
'5-American Indian' = NA;
'6-Multi racial' = 'Multi racial'")
factor_data_frame$instructional_practice <- car::recode(factor_data_frame$instructional_practice, # are these correct?
"c('1 Lecture') = 'Lecture';
c('2 Seatwk-Ind', '3 Review-Ind') = 'Individual Work';
c('4 Seatwk-Grp', '5 Review-Grp') = 'Group Work';
c('6 QuizPrep', '8 TestTaking', '7 QuizRev') = 'Quiz and Test';
c('9 Discussion') = 'Discussion';
c('11 PresElab', '10 Presentation') = 'Presentation';
c('12 Video-Watch', '13 Video-Elab') = 'Video';
c('15 Labwork', '14 Lab-Prep', '16 Lab-Review') = 'Laboratory';
c('17 NonInstTime') = 'Non-instructional';
c('18 OffTask') = NA")
###############################
### 3. COMMAND AND CONTROL ####
###############################
prepared_data <- prepare_data(raw_data_matrix, "grand", grouping_vector = NULL, to_standardize = T) # this won't work when no cases are removed
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Behavioral Engagement", "Cognitive Engagement", "Affective Engagement")) # need to make this name them automatically
#plot(statistics[[2]])
statistics[[5]]
statistics[[6]]
statistics[[7]]
statistics[[8]]
str(statistics[[9]])
statistics[[10]] + ylab("Raw score")
# ggsave("cluster-centroids.png", height = 5, width = 6)
cluster_vector <- c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")
?explore_factors
str(factor_data_frame)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("instructional_practice"), cluster_vector)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("instructional_practice"), cluster_names = cluster_vector)
explored_factors[[4]]
explored_factors[[6]][[1]]
explored_factors[[6]][[2]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("instructional_practice", "gender"), cluster_names = cluster_vector)
explored_factors[[4]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("instructional_practice", "gender", "race"), cluster_names = cluster_vector)
distinct(factor_data_frame)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("instructional_practice", "race"), cluster_names = cluster_vector)
explored_factors[[4]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("instructional_practice", "gender"), cluster_names = cluster_vector)
explored_factors[[4]]
explored_factors[[6]][[1]]
ggsave("instructional_practice_by_gender.png", height = 4, width = 6)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("instructional_practice"), cluster_names = cluster_vector)
explored_factors[[4]]
ggsave("instructional_practice.png", height = 4, width = 6)
explored_factors[[6]][[1]]
statistics <- calculate_stats(output, c("Behavioral Engagement", "Cognitive Engagement", "Affective Engagement")) # need to make this name them automatically
#plot(statistics[[2]])
statistics[[5]]
statistics[[6]]
statistics[[7]]
statistics[[8]]
str(statistics[[9]])
statistics[[10]] + ylab("Raw score")
ggsave("cluster-centroids.png", height = 5, width = 6)
# command_and_control.R
###############################
### 1. SETTING UP #############
###############################
# remove(list = ls())
# devtools::install_github("jrosen48/prcr")
library(prcr)
library(ggplot2)
library(dplyr)
set.seed("03112016")
setwd("~/dropbox/research/prcr")
data <- tbl_df(foreign::read.spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav", to.data.frame = T))
# data <- haven::read_spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav")
###############################
### 2. CREATING SCALES ########
###############################
new_data <- read.csv("for_profiles_of_profiles.csv", stringsAsFactors = F)
names(new_data) <- c("stud_ID", "gender", "Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")
# new_data <- select(new_data, -gender)
str(new_data)
View(new_data)
raw_data_matrix <- new_data[, 3:9]
str(factor_data_frame)
factor_data_frame$gender <- car::recode(factor_data_frame$gender,
"'1-M' = 'Male';
'2-F' = 'Female'")
factor_data_frame$subject <- car::recode(factor_data_frame$subject,
"'1-Integrated Sci' = 'Integrated Science';
'2-Biology' = 'Biology';
'3-Chemistry' = 'Chemistry';
'4-Physics' = 'Physics'")
factor_data_frame$race <- car::recode(factor_data_frame$race,
"'1-Asian or Pacific Islander' = NA;
'2-Hispanic' = 'Hispanic';
'3-Black' = 'Black';
'4-White' = 'White';
'5-American Indian' = NA;
'6-Multi racial' = 'Multi racial'")
# factor_data_frame$instructional_practice <- car::recode(factor_data_frame$instructional_practice, # are these correct?
#                                                         "c('1 Lecture') = 'Lecture';
#                                                         c('2 Seatwk-Ind', '3 Review-Ind') = 'Individual Work';
#                                                         c('4 Seatwk-Grp', '5 Review-Grp') = 'Group Work';
#                                                         c('6 QuizPrep', '8 TestTaking', '7 QuizRev') = 'Quiz and Test';
#                                                         c('9 Discussion') = 'Discussion';
#                                                         c('11 PresElab', '10 Presentation') = 'Presentation';
#                                                         c('12 Video-Watch', '13 Video-Elab') = 'Video';
#                                                         c('15 Labwork', '14 Lab-Prep', '16 Lab-Review') = 'Laboratory';
#                                                         c('17 NonInstTime') = 'Non-instructional';
#                                                         c('18 OffTask') = NA")
###############################
### 3. COMMAND AND CONTROL ####
###############################
prepared_data <- prepare_data(raw_data_matrix, "raw", grouping_vector = NULL, to_standardize = T) # this won't work when no cases are removed
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
# plot(statistics[[2]])
# statistics[[5]]
# statistics[[6]]
# statistics[[7]]
# statistics[[8]]
str(statistics[[9]])
statistics[[10]] + ylab("Raw score")
# ggsave("cluster-centroids.png", height = 5, width = 6)
cluster_vector <- c("Moderately Low", "Rational", "Purposeful", "Universally Low", "Busy", "Full", "Recreational")
str(factor_data_frame)
statistics[[10]] + ylab("Raw score")
ggsave("profiles_of_profiles.png", width = 6, height = 5)
ggsave("profiles_of_profiles_gender.png", width = 5, height = 4)
ggsave("profiles_of_profiles_gender_by_race.png", width = 6, height = 5)
# command_and_control.R
###############################
### 1. SETTING UP #############
###############################
remove(list = ls())
# devtools::install_github("jrosen48/prcr")
library(prcr)
library(ggplot2)
library(dplyr)
set.seed("03112016")
setwd("~/dropbox/research/SciMo")
data <- tbl_df(foreign::read.spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav", to.data.frame = T))
# data <- haven::read_spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav")
# Removing the errant case
data$stud_ID <- stringr::str_trim(as.character(data$stud_ID))
to_remove <- data$stud_ID == "AXR050594" & data$month == 10 & data$day == 20 & data$year == 8 & data$signal == "2-2nd signal" # removing 10/20/8, ID = "AXR050594", second beeper
nrow(data)
data <- data[!to_remove, ]
nrow(data) # - 1 case
###############################
### 2. CREATING SCALES ########
###############################
cognitive <- data.frame(cbind(data$imp_y, data$imp_fut), stringsAsFactors = F)
affective <- data.frame(cbind(data$enjoy, data$interest), stringsAsFactors = F)
behavioral <- data.frame(cbind(data$conc, data$hardwk), stringsAsFactors = F)
data_ss <-
data %>%
mutate(behavioral_scale = ifelse(!is.na(behavioral$X1) & !is.na(behavioral$X2), (behavioral$X1 + behavioral$X2) / 2,
ifelse(is.na(behavioral$X1), behavioral$X2, behavioral$X1)),
cognitive_scale = ifelse(!is.na(cognitive$X1) & !is.na(cognitive$X2), (cognitive$X1 + cognitive$X2) / 2,
ifelse(is.na(cognitive$X1), cognitive$X2, cognitive$X1)),
affective_scale = ifelse(!is.na(affective$X1) & !is.na(affective$X2), (affective$X1 + affective$X2) / 2,
ifelse(is.na(affective$X1), affective$X2, affective$X1)), stringsAsFactors = F) %>%
select(behavioral_scale,
cognitive_scale,
affective_scale,
stud_ID,
teacher_ID,
subject,
gender,
race,
instructional_practice,
age,
posaffect,
negaffect,
relevance,
efficacy,
selfesteem,
expectation)
raw_data_matrix <- data_ss[, 1:3]
grouping_vector <- data_ss[, 4]
factor_data_frame <- dplyr::select(data_ss, stud_ID, subject, gender, race:expectation)
factor_data_frame$age <- as.factor(factor_data_frame$age)
factor_data_frame$posaffect <- as.factor(factor_data_frame$posaffect)
factor_data_frame$negaffect <- as.factor(factor_data_frame$negaffect)
factor_data_frame$relevance <- as.factor(factor_data_frame$relevance)
factor_data_frame$efficacy <- as.factor(factor_data_frame$efficacy)
factor_data_frame$selfesteem <- as.factor(factor_data_frame$selfesteem)
factor_data_frame$expectation <- as.factor(data_ss$expectation)
factor_data_frame$gender <- car::recode(factor_data_frame$gender,
"'1-M' = 'Male';
'2-F' = 'Female'")
factor_data_frame$subject <- car::recode(factor_data_frame$subject,
"'1-Integrated Sci' = 'Integrated Science';
'2-Biology' = 'Biology';
'3-Chemistry' = 'Chemistry';
'4-Physics' = 'Physics'")
factor_data_frame$race <- car::recode(factor_data_frame$race,
"'1-Asian or Pacific Islander' = NA;
'2-Hispanic' = 'Hispanic';
'3-Black' = 'Black';
'4-White' = 'White';
'5-American Indian' = NA;
'6-Multi racial' = 'Multi racial'")
factor_data_frame$instructional_practice <- car::recode(factor_data_frame$instructional_practice, # are these correct?
"c('1 Lecture') = 'Lecture';
c('2 Seatwk-Ind', '3 Review-Ind') = 'Individual Work';
c('4 Seatwk-Grp', '5 Review-Grp') = 'Group Work';
c('6 QuizPrep', '8 TestTaking', '7 QuizRev') = 'Quiz and Test';
c('9 Discussion') = 'Discussion';
c('11 PresElab', '10 Presentation') = 'Presentation';
c('12 Video-Watch', '13 Video-Elab') = 'Video';
c('15 Labwork', '14 Lab-Prep', '16 Lab-Review') = 'Laboratory';
c('17 NonInstTime') = 'Non-instructional';
c('18 OffTask') = NA")
prepared_data <- prepare_data(raw_data_matrix, "grand", grouping_vector = NULL, to_standardize = T) # this won't work when no cases are removed
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Behavioral Engagement", "Cognitive Engagement", "Affective Engagement")) # need to make this name them automatically
#plot(statistics[[2]])
statistics[[5]]
statistics[[6]]
statistics[[10]] + ylab("Raw score")
ggsave("cluster-centroids.png", height = 5, width = 6)
statistics[[10]] + ylab("Z-score")
ggsave("cluster-centroids.png", height = 5, width = 6)
str(statistics[[9]])
statistics[[10]] + ylab("Z-score")
ggsave("cluster-centroids.png", height = 5, width = 6)
statistics[[9]]
write.csv(statistics[[9]], "cluster_centroids.csv", row.names = F)
statistics[[7]]
factor_data_frame <- dplyr::select(data_ss, stud_ID, subject, gender, race:age, -instructional_practice) # pop
factor_data_frame <- distinct(factor_data_frame)
to_merge <-
data_ss %>%
select(stud_ID, posaffect:expectation) %>%
group_by(stud_ID) %>%
summarize_each(funs(mean))
factor_data_frame <- dplyr::left_join(factor_data_frame, to_merge, by = "stud_ID")
factor_data_frame$age <- as.factor(factor_data_frame$age)
factor_data_frame$posaffect <- as.factor(factor_data_frame$posaffect)
factor_data_frame$negaffect <- as.factor(factor_data_frame$negaffect)
factor_data_frame$relevance <- as.factor(round(factor_data_frame$relevance))
factor_data_frame$efficacy <- as.factor(round(factor_data_frame$efficacy))
factor_data_frame$selfesteem <- as.factor(factor_data_frame$selfesteem)
factor_data_frame$expectation <- as.factor(round(factor_data_frame$expectation))
library(prcr)
library(ggplot2)
library(dplyr)
set.seed("03112016")
setwd("~/dropbox/research/prcr")
data <- tbl_df(foreign::read.spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav", to.data.frame = T))
# data <- haven::read_spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav")
###############################
### 2. CREATING SCALES ########
###############################
new_data <- read.csv("for_profiles_of_profiles.csv", stringsAsFactors = F)
names(new_data) <- c("stud_ID", "gender", "Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")
# new_data <- select(new_data, -gender)
str(new_data)
View(new_data)
raw_data_matrix <- new_data[, 3:9]
ggsave("profiles_of_profiles.png", width = 6, height = 5)
ggsave("profiles_of_profiles_gender.png", width = 5, height = 4)
ggsave("profiles_of_profiles_gender_by_race.png", width = 6, height = 5)
str(factor_data_frame)
factor_data_frame$gender <- car::recode(factor_data_frame$gender,
"'1-M' = 'Male';
'2-F' = 'Female'")
factor_data_frame$subject <- car::recode(factor_data_frame$subject,
"'1-Integrated Sci' = 'Integrated Science';
'2-Biology' = 'Biology';
'3-Chemistry' = 'Chemistry';
'4-Physics' = 'Physics'")
factor_data_frame$race <- car::recode(factor_data_frame$race,
"'1-Asian or Pacific Islander' = NA;
'2-Hispanic' = 'Hispanic';
'3-Black' = 'Black';
'4-White' = 'White';
'5-American Indian' = NA;
'6-Multi racial' = 'Multi racial'")
prepared_data <- prepare_data(raw_data_matrix, "raw", grouping_vector = NULL, to_standardize = T) # this won't work when no cases are removed
prepared_data <- prepare_data(raw_data_matrix, "raw", grouping_vector = NULL, to_standardize = F) # this won't work when no cases are removed
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
prepared_data <- prepare_data(raw_data_matrix, "raw", grouping_vector = NULL, to_standardize = T) # this won't work when no cases are removed
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
devtools::load_all(".")
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
prepared_data <- prepare_data(raw_data_matrix, "raw", grouping_vector = NULL, to_standardize = F) # this won't work when no cases are removed
output <- create_profiles(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
statistics[[10]] + ylab("Raw score")
ggsave("cluster-centroids.png", height = 5, width = 6)
str(statistics[[9]])
write.csv(statistics[[9]], "cluster_centroids.csv", row.names = F)
statistics <- calculate_stats(output, c("Busy", "Recreational", "Full", "Universally Low", "Purposeful", "Moderately Low", "Rationally")) # need to make this name them automatically
write.csv(statistics[[9]], "cluster_centroids.csv", row.names = F)
statistics[[9]]
write.csv(statistics[[9]], "cluster_centroids.csv", row.names = F)
round(statistics[[9]], "cluster_centroids.csv", row.names = F)
statistics[[7]]
statistics[[8]]
statistics[[6]]
statistics[[7]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race", "gender"), cluster_names = cluster_vector)
cluster_vector <- c("Moderately Low", "Rational", "Purposeful", "Universally Low", "Busy", "Full", "Recreational")
str(factor_data_frame)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race", "gender"), cluster_names = cluster_vector)
explored_factors[[4]] # plot
ggsave("race_by_gender.png", height = 4, width = 5)
explored_factors[[6]][[1]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("race"), cluster_names = cluster_vector)
ggsave("race.png", height = 4, width = 5)
explored_factors[[6]][[1]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
c("gender"), cluster_names = cluster_vector)
ggsave("gender.png", height = 4, width = 5)
explored_factors[[6]][[1]]
