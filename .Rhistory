devtools::use_package("ggplot2")
devtools::install_github("jrosen48/prcr")
library(prcr)
library(dplyr)
set.seed("03112016")
# setwd("~/dropbox/research/SciMo/prcr/R")
data <- tbl_df(foreign::read.spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav", to.data.frame = T))
# data <- haven::read_spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav")
# Removing the errant case
data$stud_ID <- stringr::str_trim(as.character(data$stud_ID))
to_remove <- data$stud_ID == "AXR050594" & data$month == 10 & data$day == 20 & data$year == 8 & data$signal == "2-2nd signal" # removing 10/20/8, ID = "AXR050594", second beeper
nrow(data)
data <- data[!to_remove, ]
nrow(data) # - 1 case
# Recoding instructional practices
data$instructional_practice_re <- car::recode(data$instructional_practice, # are these correct?
"c('1 Lecture') = 'Lecture';
c('2 Seatwk-Ind', '3 Review-Ind') = 'Individual Work';
c('4 Seatwk-Grp', '5 Review-Grp') = 'Group Work';
c('6 QuizPrep', '8 TestTaking', '7 QuizRev') = 'Quiz and Test';
c('9 Discussion') = 'Discussion';
c('11 PresElab', '10 Presentation') = 'Presentation';
c('12 Video-Watch', '13 Video-Elab') = 'Video';
c('15 Labwork', '14 Lab-Prep', '16 Lab-Review') = 'Laboratory';
c('17 NonInstTime') = 'Non-instructional';
c('18 OffTask') = 'Off-task'")
###############################
### 2. CREATING SCALES ########
###############################
cognitive <- data.frame(cbind(data$imp_y, data$imp_fut), stringsAsFactors = F)
affective <- data.frame(cbind(data$enjoy, data$interest), stringsAsFactors = F)
behavioral <- data.frame(cbind(data$conc, data$hardwk), stringsAsFactors = F)
data <- data.frame(data,
behavioral_scale = (behavioral$X1 + behavioral$X2) / 2,
cognitive_scale = (cognitive$X1 + cognitive$X2) / 2,
affective_scale = (affective$X1 + affective$X2) / 2, stringsAsFactors = F) # change these to mean... and find a way to keep just one if there's one of two
data_ss <-
data %>%
mutate(behavioral_scale = (behavioral$X1 + behavioral$X2) / 2,
cognitive_scale = (cognitive$X1 + cognitive$X2) / 2,
affective_scale = (affective$X1 + affective$X2) / 2) %>%
select(behavioral_scale,
cognitive_scale,
affective_scale,
stud_ID,
teacher_ID,
subject,
gender,
race,
instructional_practice_re,
age)
raw_data_matrix <- data_ss[, 1:3]
grouping_vector <- data_ss[, 4]
factor_data_frame <- dplyr::select(data_ss, stud_ID:age)
str(factor_data_frame)
###############################
### 3. COMMAND AND CONTROL ####
###############################
prepared_data <- prepare_data(raw_data_matrix, "grand", grouping_vector, to_standardize = T)
output <- cluster_data(prepared_data, 8, "squared_euclidean", "complete")
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"race", variable_to_find_proportion = "stud_ID", cluster_names = NULL)
statistics <- calculate_stats(output)
devtools::install_github("jrosen48/prcr")
library(prcr)
statistics <- calculate_stats(output)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"race", variable_to_find_proportion = "stud_ID", cluster_names = NULL)
devtools::install_github("jrosen48/prcr")
library(prcr)
prepared_data <- prepare_data(raw_data_matrix, "grand", grouping_vector, to_standardize = T)
output <- cluster_data(prepared_data, 8, "squared_euclidean", "complete")
statistics <- calculate_stats(output)
devtools::document()
devtools::install_github("jrosen48/prcr")
statistics <- calculate_stats(output)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"race", variable_to_find_proportion = "stud_ID", cluster_names = NULL)
explored_factors
?explore_factors
find_n <- function(raw_data, factor_to_explore){
out <-
raw_data %>%
group_by_(factor_to_explore) %>%
summarize(n = n())
return(out)
}
find_n(explored_factors[[2]], "race")
devtools::load_all()
remove(list = ls())
devtools::load_all(".")
library(dplyr)
set.seed("03112016")
# setwd("~/dropbox/research/SciMo/prcr/R")
data <- tbl_df(foreign::read.spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav", to.data.frame = T))
# data <- haven::read_spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav")
# Removing the errant case
data$stud_ID <- stringr::str_trim(as.character(data$stud_ID))
to_remove <- data$stud_ID == "AXR050594" & data$month == 10 & data$day == 20 & data$year == 8 & data$signal == "2-2nd signal" # removing 10/20/8, ID = "AXR050594", second beeper
nrow(data)
data <- data[!to_remove, ]
nrow(data) # - 1 case
# Recoding instructional practices
data$instructional_practice_re <- car::recode(data$instructional_practice, # are these correct?
"c('1 Lecture') = 'Lecture';
c('2 Seatwk-Ind', '3 Review-Ind') = 'Individual Work';
c('4 Seatwk-Grp', '5 Review-Grp') = 'Group Work';
c('6 QuizPrep', '8 TestTaking', '7 QuizRev') = 'Quiz and Test';
c('9 Discussion') = 'Discussion';
c('11 PresElab', '10 Presentation') = 'Presentation';
c('12 Video-Watch', '13 Video-Elab') = 'Video';
c('15 Labwork', '14 Lab-Prep', '16 Lab-Review') = 'Laboratory';
c('17 NonInstTime') = 'Non-instructional';
c('18 OffTask') = 'Off-task'")
###############################
### 2. CREATING SCALES ########
###############################
cognitive <- data.frame(cbind(data$imp_y, data$imp_fut), stringsAsFactors = F)
affective <- data.frame(cbind(data$enjoy, data$interest), stringsAsFactors = F)
behavioral <- data.frame(cbind(data$conc, data$hardwk), stringsAsFactors = F)
data <- data.frame(data,
behavioral_scale = (behavioral$X1 + behavioral$X2) / 2,
cognitive_scale = (cognitive$X1 + cognitive$X2) / 2,
affective_scale = (affective$X1 + affective$X2) / 2, stringsAsFactors = F) # change these to mean... and find a way to keep just one if there's one of two
data_ss <-
data %>%
mutate(behavioral_scale = (behavioral$X1 + behavioral$X2) / 2,
cognitive_scale = (cognitive$X1 + cognitive$X2) / 2,
affective_scale = (affective$X1 + affective$X2) / 2) %>%
select(behavioral_scale,
cognitive_scale,
affective_scale,
stud_ID,
teacher_ID,
subject,
gender,
race,
instructional_practice_re,
age)
raw_data_matrix <- data_ss[, 1:3]
grouping_vector <- data_ss[, 4]
factor_data_frame <- dplyr::select(data_ss, stud_ID:age)
str(factor_data_frame)
prepared_data <- prepare_data(raw_data_matrix, "grand", grouping_vector, to_standardize = T)
cross_validation_df <- prepared_data
str(prepared_data)
