"instructional_practice_re", variable_to_find_proportion = "instructional_practice_re",
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"instructional_practice_re", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
traceback()
explore_factors <- function(cluster_assignments, cases_to_keep, factor_data_frame, factor_to_explore, variable_to_find_proportion = NULL, cluster_names = NULL){
out <- list()
data <- merge_assignments_and_factors(cluster_assignments, cases_to_keep, factor_data_frame)
# data$cluster_names <- data$cluster
# levels(data$cluster_names) <- cluster_names
dummy_coded_data <- dummmy_code_cluster_assignments(data)
out[[1]] <- create_crosstab(data, factor_to_explore)
out[[2]] <- create_raw_data(dummy_coded_data, factor_to_explore, variable_to_find_proportion)
out[[3]] <- create_processed_data(out[[2]], factor_to_explore, variable_to_find_proportion)
out[[4]] <- create_plot_to_explore_factors(out[[3]], factor_to_explore, cluster_names)
out[[5]] <- find_n(out[[2]], factor_to_explore)
# out[[6]] <- create_compare_anova(out[[2]], cluster_names)
# out[[7]] <- create_comprae_manova()
print("### Created the following output ... ")
print("### 1. Comparison table ###")
print("### 2. Processed data: Raw ###")
print("### 3. Processed data: Summary ###")
print("### 4. ggplot2 object  ###")
print("### 5. Number by factor  ###")
print("### 6. ANOVA ###")
# print("### 7. MANOVA ###")
invisible(out)
}
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"instructional_practice_re", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
explored_factors[[4]]
ggsave("instructional_practice.png", height = 5, width = 7)
explored_factors[[5]]
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
explored_factors[[1]]
explored_factors[[3]]
explored_factors[[4]]
ggsave("subject.png", height = 4, width = 6)
explore_factors <- function(cluster_assignments, cases_to_keep, factor_data_frame, factor_to_explore, variable_to_find_proportion = NULL, cluster_names = NULL){
out <- list()
data <- merge_assignments_and_factors(cluster_assignments, cases_to_keep, factor_data_frame)
# data$cluster_names <- data$cluster
# levels(data$cluster_names) <- cluster_names
dummy_coded_data <- dummmy_code_cluster_assignments(data)
out[[1]] <- create_crosstab(data, factor_to_explore)
out[[2]] <- create_raw_data(dummy_coded_data, factor_to_explore, variable_to_find_proportion)
out[[3]] <- create_processed_data(out[[2]], factor_to_explore, variable_to_find_proportion)
out[[4]] <- create_plot_to_explore_factors(out[[3]], factor_to_explore, cluster_names)
out[[5]] <- find_n(out[[2]], factor_to_explore)
out[[6]] <- create_compare_anova(out[[2]], cluster_names)
# out[[7]] <- create_comprae_manova()
print("### Created the following output ... ")
print("### 1. Comparison table ###")
print("### 2. Processed data: Raw ###")
print("### 3. Processed data: Summary ###")
print("### 4. ggplot2 object  ###")
print("### 5. Number by factor  ###")
print("### 6. ANOVA ###")
# print("### 7. MANOVA ###")
invisible(out)
}
explored_factors[[2]]
explored_factors[[3]]
create_processed_data <- function(raw_data, factor_to_explore, variable_to_find_proportion){
# this is for summary table and plot
if (!is.null(variable_to_find_proportion)) {
processed_data <- raw_data %>%
select(-matches(variable_to_find_proportion)) %>%
group_by_(factor_to_explore) %>%
summarize_each(funs(mean))
} else {
processed_data <- raw_data
}
return(processed_data)
}
explore_factors <- function(cluster_assignments, cases_to_keep, factor_data_frame, factor_to_explore, variable_to_find_proportion = NULL, cluster_names = NULL){
out <- list()
data <- merge_assignments_and_factors(cluster_assignments, cases_to_keep, factor_data_frame)
# data$cluster_names <- data$cluster
# levels(data$cluster_names) <- cluster_names
dummy_coded_data <- dummmy_code_cluster_assignments(data)
out[[1]] <- create_crosstab(data, factor_to_explore)
out[[2]] <- create_raw_data(dummy_coded_data, factor_to_explore, variable_to_find_proportion)
out[[3]] <- create_processed_data(out[[2]], factor_to_explore, variable_to_find_proportion)
out[[4]] <- create_plot_to_explore_factors(out[[3]], factor_to_explore, cluster_names)
out[[5]] <- find_n(out[[2]], factor_to_explore)
out[[6]] <- create_compare_anova(out[[2]], cluster_names)
# out[[7]] <- create_comprae_manova()
print("### Created the following output ... ")
print("### 1. Comparison table ###")
print("### 2. Processed data: Raw ###")
print("### 3. Processed data: Summary ###")
print("### 4. ggplot2 object  ###")
print("### 5. Number by factor  ###")
print("### 6. ANOVA ###")
# print("### 7. MANOVA ###")
invisible(out)
}
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
devtools::load_all(".")
create_processed_data <- function(raw_data, factor_to_explore, variable_to_find_proportion){
# this is for summary table and plot
if (!is.null(variable_to_find_proportion)) {
processed_data <- raw_data %>%
select(-matches(variable_to_find_proportion)) %>%
group_by_(factor_to_explore) %>%
summarize_each(funs(mean))
} else {
processed_data <- raw_data
}
return(processed_data)
}
create_plot_to_explore_factors <- function(processed_data, factor_to_explore, cluster_names){
processed_data <- processed_data[complete.cases(processed_data), ]
to_plot <- tidyr::gather(processed_data, cluster, mean, -matches(factor_to_explore))
# to_plot # this is where you can rename the clusters
# to_plot # this is where you can rename the groups
out <- ggplot(to_plot, aes(y = mean, fill = cluster)) +
aes_string(x = factor_to_explore) +
geom_bar(stat = "identity", color = "black") +
xlab("") +
ylab("Proportion of Responses") +
ggtitle("") +
theme(legend.position = "top") +
theme(legend.title=element_blank()) +
theme(text=element_text(size = 12, family = "Times")) +
theme(axis.text.x = element_text(angle = 90)) +
theme(legend.position = "right") +
theme(legend.title = element_blank()) +
scale_fill_discrete(name = "Cluster", labels = cluster_names)
return(out)
}
# create_compare_manova <- function(processed_data, factor_to_explore){
#     factor_to_explore <- "race"
#     processed_data <- explored_factors[[2]]
#     df <- as.data.frame(processed_data)
#     df$DV <- as.matrix(cbind(df[, 3:ncol(df)]))
#     x <- paste0("DV ~ ", factor_to_explore, sep = "")
#     out <- manova(as.formula(x), data = df)
#     return(out)
# }
create_compare_anova <- function(processed_data, cluster_names){
df <- processed_data
names(df)[2] <- "DV"
out <- list()
for (i in 1:(ncol(processed_data) - 2)){
x <- paste0("cluster", i, " ~ DV", sep = "")
out[[i]] <- summary(aov(as.formula(x), data = df))
}
names(out) <- cluster_names
return(out)
}
# # For cross-validation
#
# splitting_halves <- function(x){
#
# }
#
# str(prepared_data)
# cross_validation_df$half <- sample(c(rep(1, 1939), rep(2, 1939)), 3878)
#
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
traceback()
explore_factors <- function(cluster_assignments, cases_to_keep, factor_data_frame, factor_to_explore, variable_to_find_proportion = NULL, cluster_names = NULL){
out <- list()
data <- merge_assignments_and_factors(cluster_assignments, cases_to_keep, factor_data_frame)
# data$cluster_names <- data$cluster
# levels(data$cluster_names) <- cluster_names
dummy_coded_data <- dummmy_code_cluster_assignments(data)
out[[1]] <- create_crosstab(data, factor_to_explore)
out[[2]] <- create_raw_data(dummy_coded_data, factor_to_explore, variable_to_find_proportion)
print(str(out[[2]]))
out[[3]] <- create_processed_data(out[[2]], factor_to_explore, variable_to_find_proportion)
print(out[[3]])
out[[4]] <- create_plot_to_explore_factors(out[[3]], factor_to_explore, cluster_names)
out[[5]] <- find_n(out[[2]], factor_to_explore)
out[[6]] <- create_compare_anova(out[[2]], cluster_names)
# out[[7]] <- create_comprae_manova()
print("### Created the following output ... ")
print("### 1. Comparison table ###")
print("### 2. Processed data: Raw ###")
print("### 3. Processed data: Summary ###")
print("### 4. ggplot2 object  ###")
print("### 5. Number by factor  ###")
print("### 6. ANOVA ###")
# print("### 7. MANOVA ###")
invisible(out)
}
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
devtools::load_all(".")
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
source('~/Dropbox/research/prcr/R/primary_functions.R', echo=TRUE)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject",
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
create_raw_data <- function(dummy_coded_data, factor_to_explore, variable_to_find_proportion){
# this is for ANOVA and for subsequent processing
if (!is.null(variable_to_find_proportion)) {
raw_data <- dummy_coded_data %>%
select(matches(variable_to_find_proportion), matches(factor_to_explore), contains("cluster")) %>%
group_by_(variable_to_find_proportion, factor_to_explore) %>%
summarize_each(funs(mean)) %>%
ungroup()
} else {
raw_data <- dummy_coded_data %>%
select(matches(factor_to_explore), contains("cluster")) %>%
ungroup()
}
return(raw_data)
}
find_n <- function(raw_data, factor_to_explore){
out <-
raw_data %>%
group_by_(factor_to_explore) %>%
summarize(n = n())
return(out)
}
create_processed_data <- function(raw_data, factor_to_explore, variable_to_find_proportion){
# this is for summary table and plot
if (!is.null(variable_to_find_proportion)) {
processed_data <- raw_data %>%
select(-matches(variable_to_find_proportion)) %>%
group_by_(factor_to_explore) %>%
summarize_each(funs(mean))
} else {
processed_data <- raw_data %>%
group_by_(factor_to_explore) %>%
summarize_each(funs(mean))
}
return(processed_data)
}
explore_factors <- function(cluster_assignments, cases_to_keep, factor_data_frame, factor_to_explore, variable_to_find_proportion = NULL, cluster_names = NULL){
out <- list()
data <- merge_assignments_and_factors(cluster_assignments, cases_to_keep, factor_data_frame)
# data$cluster_names <- data$cluster
# levels(data$cluster_names) <- cluster_names
dummy_coded_data <- dummmy_code_cluster_assignments(data)
out[[1]] <- create_crosstab(data, factor_to_explore)
print(str(dummy_coded_data))
out[[2]] <- create_raw_data(dummy_coded_data, factor_to_explore, variable_to_find_proportion)
print(str(out[[2]]))
out[[3]] <- create_processed_data(out[[2]], factor_to_explore, variable_to_find_proportion)
print(out[[3]])
out[[4]] <- create_plot_to_explore_factors(out[[3]], factor_to_explore, cluster_names)
out[[5]] <- find_n(out[[2]], factor_to_explore)
out[[6]] <- create_compare_anova(out[[2]], cluster_names)
# out[[7]] <- create_comprae_manova()
print("### Created the following output ... ")
print("### 1. Comparison table ###")
print("### 2. Processed data: Raw ###")
print("### 3. Processed data: Summary ###")
print("### 4. ggplot2 object  ###")
print("### 5. Number by factor  ###")
print("### 6. ANOVA ###")
# print("### 7. MANOVA ###")
invisible(out)
}
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject",
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = "stud_ID",
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
create_compare_anova <- function(processed_data, variable_to_find_proportion, cluster_names){
df <- processed_data
out <- list()
if (!is.null(variable_to_find_proportion)){
names(df)[2] <- "DV"
for (i in 1:(ncol(processed_data) - 2)){
x <- paste0("DV ~ ", "cluster", i, sep = "")
out[[i]] <- summary(aov(as.formula(x), data = df))
}
} else {
names(df)[1] <- "DV"
for (i in 1:(ncol(processed_data) - 1)){
x <- paste0("DV ~ ", "cluster", i, sep = "")
out[[i]] <- summary(aov(as.formula(x), data = df))
}
}
names(out) <- cluster_names
return(out)
}
explore_factors <- function(cluster_assignments, cases_to_keep, factor_data_frame, factor_to_explore, variable_to_find_proportion = NULL, cluster_names = NULL){
out <- list()
data <- merge_assignments_and_factors(cluster_assignments, cases_to_keep, factor_data_frame)
# data$cluster_names <- data$cluster
# levels(data$cluster_names) <- cluster_names
dummy_coded_data <- dummmy_code_cluster_assignments(data)
out[[1]] <- create_crosstab(data, factor_to_explore)
print(str(dummy_coded_data))
out[[2]] <- create_raw_data(dummy_coded_data, factor_to_explore, variable_to_find_proportion)
print(str(out[[2]]))
out[[3]] <- create_processed_data(out[[2]], factor_to_explore, variable_to_find_proportion)
print(out[[3]])
out[[4]] <- create_plot_to_explore_factors(out[[3]], factor_to_explore, cluster_names)
out[[5]] <- find_n(out[[2]], factor_to_explore)
out[[6]] <- create_compare_anova(out[[2]], variable_to_find_proportion, cluster_names)
# out[[7]] <- create_comprae_manova()
print("### Created the following output ... ")
print("### 1. Comparison table ###")
print("### 2. Processed data: Raw ###")
print("### 3. Processed data: Summary ###")
print("### 4. ggplot2 object  ###")
print("### 5. Number by factor  ###")
print("### 6. ANOVA ###")
# print("### 7. MANOVA ###")
invisible(out)
}
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = "stud_ID",
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
traceback()
create_compare_anova <- function(processed_data, variable_to_find_proportion, cluster_names){
df <- processed_data
out <- list()
if (!is.null(variable_to_find_proportion)){
names(df)[2] <- "DV"
for (i in 1:(ncol(processed_data) - 2)){
x <- paste0("cluster", i, " ~ DV", sep = "")
out[[i]] <- summary(aov(as.formula(x), data = df))
}
} else {
names(df)[1] <- "DV"
for (i in 1:(ncol(processed_data) - 1)){
x <- paste0("cluster", i, " ~ DV", sep = "")
out[[i]] <- summary(aov(as.formula(x), data = df))
}
}
names(out) <- cluster_names
return(out)
}
explore_factors <- function(cluster_assignments, cases_to_keep, factor_data_frame, factor_to_explore, variable_to_find_proportion = NULL, cluster_names = NULL){
out <- list()
data <- merge_assignments_and_factors(cluster_assignments, cases_to_keep, factor_data_frame)
# data$cluster_names <- data$cluster
# levels(data$cluster_names) <- cluster_names
dummy_coded_data <- dummmy_code_cluster_assignments(data)
out[[1]] <- create_crosstab(data, factor_to_explore)
print(str(dummy_coded_data))
out[[2]] <- create_raw_data(dummy_coded_data, factor_to_explore, variable_to_find_proportion)
print(str(out[[2]]))
out[[3]] <- create_processed_data(out[[2]], factor_to_explore, variable_to_find_proportion)
print(out[[3]])
out[[4]] <- create_plot_to_explore_factors(out[[3]], factor_to_explore, cluster_names)
out[[5]] <- find_n(out[[2]], factor_to_explore)
out[[6]] <- create_compare_anova(out[[2]], variable_to_find_proportion, cluster_names)
# out[[7]] <- create_comprae_manova()
print("### Created the following output ... ")
print("### 1. Comparison table ###")
print("### 2. Processed data: Raw ###")
print("### 3. Processed data: Summary ###")
print("### 4. ggplot2 object  ###")
print("### 5. Number by factor  ###")
print("### 6. ANOVA ###")
# print("### 7. MANOVA ###")
invisible(out)
}
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = "stud_ID",
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"subject", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
explored_factors[[1]]
explored_factors[[2]] # this is the problem
explored_factors[[3]] # above - it looks the same as this
explored_factors[[3]]
explored_factors[[4]]
ggsave("subject.png", height = 4, width = 6)
explored_factors <- explore_factors(statistics[[5]], attributes(statistics)$cases_to_keep, factor_data_frame,
"instructional_practice_re", variable_to_find_proportion = NULL,
cluster_names = c("Fully", "Just Behaviorally", "Behaviorally But Not Cognitively",
"Recreationally", "Moderately Not", "Universally Not", "Rationally"))
explored_factors[[1]]
explored_factors[[2]] # this is the problem
explored_factors[[3]] # above - it looks the same as this
explored_factors[[3]]
explored_factors[[4]]
ggsave("instructional_practice_re.png", height = 4, width = 6)
devtools::install_github("jrosen48/prcr")
remove(list = ls())
library(prcr)
library(ggplot2)
library(dplyr)
set.seed("03112016")
# setwd("~/dropbox/research/SciMo/prcr/R")
data <- tbl_df(foreign::read.spss("~/documents/myscimo/SciMo ESM.12.15.2010.sav", to.data.frame = T))
data$stud_ID <- stringr::str_trim(as.character(data$stud_ID))
to_remove <- data$stud_ID == "AXR050594" & data$month == 10 & data$day == 20 & data$year == 8 & data$signal == "2-2nd signal" # removing 10/20/8, ID = "AXR050594", second beeper
nrow(data)
data <- data[!to_remove, ]
nrow(data) # - 1 case
data$instructional_practice_re <- car::recode(data$instructional_practice, # are these correct?
"c('1 Lecture') = 'Lecture';
c('2 Seatwk-Ind', '3 Review-Ind') = 'Individual Work';
c('4 Seatwk-Grp', '5 Review-Grp') = 'Group Work';
c('6 QuizPrep', '8 TestTaking', '7 QuizRev') = 'Quiz and Test';
c('9 Discussion') = 'Discussion';
c('11 PresElab', '10 Presentation') = 'Presentation';
c('12 Video-Watch', '13 Video-Elab') = 'Video';
c('15 Labwork', '14 Lab-Prep', '16 Lab-Review') = 'Laboratory';
c('17 NonInstTime') = 'Non-instructional';
c('18 OffTask') = 'Off-task'")
cognitive <- data.frame(cbind(data$imp_y, data$imp_fut), stringsAsFactors = F)
affective <- data.frame(cbind(data$enjoy, data$interest), stringsAsFactors = F)
behavioral <- data.frame(cbind(data$conc, data$hardwk), stringsAsFactors = F)
data <- data.frame(data,
behavioral_scale = (behavioral$X1 + behavioral$X2) / 2,
cognitive_scale = (cognitive$X1 + cognitive$X2) / 2,
affective_scale = (affective$X1 + affective$X2) / 2, stringsAsFactors = F) # change these to mean... and find a way to keep just one if there's one of two
data_ss <-
data %>%
mutate(behavioral_scale = (behavioral$X1 + behavioral$X2) / 2,
cognitive_scale = (cognitive$X1 + cognitive$X2) / 2,
affective_scale = (affective$X1 + affective$X2) / 2) %>%
select(behavioral_scale,
cognitive_scale,
affective_scale,
stud_ID,
teacher_ID,
subject,
gender,
race,
instructional_practice_re,
age)
raw_data_matrix <- data_ss[, 1:3]
grouping_vector <- data_ss[, 4]
factor_data_frame <- dplyr::select(data_ss, stud_ID:age)
cognitive <- data.frame(cbind(data$imp_y, data$imp_fut), stringsAsFactors = F)
affective <- data.frame(cbind(data$enjoy, data$interest), stringsAsFactors = F)
behavioral <- data.frame(cbind(data$conc, data$hardwk), stringsAsFactors = F)
data <- data.frame(data,
behavioral_scale = (behavioral$X1 + behavioral$X2) / 2,
cognitive_scale = (cognitive$X1 + cognitive$X2) / 2,
affective_scale = (affective$X1 + affective$X2) / 2, stringsAsFactors = F) # change these to mean... and find a way to keep just one if there's one of two
data_ss <-
data %>%
mutate(behavioral_scale = (behavioral$X1 + behavioral$X2) / 2,
cognitive_scale = (cognitive$X1 + cognitive$X2) / 2,
affective_scale = (affective$X1 + affective$X2) / 2) %>%
select(behavioral_scale,
cognitive_scale,
affective_scale,
stud_ID,
teacher_ID,
subject,
gender,
race,
instructional_practice_re,
age)
raw_data_matrix <- data_ss[, 1:3]
grouping_vector <- data_ss[, 4]
factor_data_frame <- dplyr::select(data_ss, stud_ID:age)
factor_data_frame$gender <- car::recode(factor_data_frame$gender,
"'1-M' = 'Male';
'2-F' = 'Female'")
factor_data_frame$gender <- car::recode(factor_data_frame$gender,
"'1-M' = 'Male';
'2-F' = 'Female'")
factor_data_frame$subject <- car::recode(factor_data_frame$subject,
"'1-Integrated Sci' = 'Integrated Science';
'2-Biology' = 'Biology';
'3-Chemistry' = 'Chemistry';
'4-Physics' = 'Physics'")
factor_data_frame$race <- car::recode(factor_data_frame$race,
"'1-Asian or Pacific Islander' = NA;
'2-Hispanic' = 'Hispanic';
'3-Black' = 'Black';
'4-White' = 'White';
'5-American Indian' = NA;
'6-Multi racial' = 'Multi racial'")
prepared_data <- prepare_data(raw_data_matrix, "grand", grouping_vector, to_standardize = T)
output <- cluster_data(prepared_data, 7, "squared_euclidean", "complete")
statistics <- calculate_stats(output, c("Behavioral Engagement", "Cognitive Engagement", "Affective Engagement"))
statistics[[6]]
statistics[[7]]
statistics[[8]]
statistics[[10]] +
ylab("Z-Score")
?TukeyHSD
x <- c(3, 14, 31, 76, 71, 34, 15)
x/244
